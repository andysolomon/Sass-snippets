/** 
 * Replace $needle by $value in $haystack
 * ---------------------------------------------------------------
 * $haystack  : list
 * $needle    : value to replace
 * $value     : new value for $needle
 * $recursive : enable / disable recursivity
 */
@function replace($haystack, $needle, $value, $recursive: false) {
  $new: ();

  @for $i from 1 through length($haystack) {
    @if type-of(nth($haystack, $i)) == list and $recursive {
      $new: append($new, replace(nth($haystack, $i), $needle, $value, $recursive));
    }

    @else {
      @if nth($haystack, $i) == $needle {
        $new: append($new, $value);
      }

      @else {
        $new: append($new, nth($haystack, $i));
      }
    }
  }

  @return $new;
}